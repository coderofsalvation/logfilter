{"name":"Logfilter","tagline":"easy portable bashscript to monitor syslog- and logfile events with on-the-fly filtering and highlight features","body":"logfilter\r\n=========\r\n\r\neasy portable bashscript to monitor syslog- and logfile events with on-the-fly filtering and highlight features\r\n\r\n### Usage\r\n\r\n    ./logfilter /var/log/syslog\r\n\r\n### The problem\r\n\r\n'tail -f' is nice to monitor logfiles, but its far from ideal.\r\nEspecially when dealing with large volumes of data.\r\nLogfilter prevents you from going crazy with bashoneliners to get some sensible output.\r\n\r\nBasically you will be going from this:\r\n\r\n  <img alt=\"tail -f alternative\" src=\"https://raw.githubusercontent.com/coderofsalvation/logfilter/master/.res/tailf.png\"/>\r\n\r\nTo this:\r\n  \r\n  <img alt=\"logfilter is a tail -f alternative\" src=\"https://raw.githubusercontent.com/coderofsalvation/logfilter/master/.res/logfilter.png\"/>\r\n\r\n### On the fly comfort\r\n\r\nThis portable utility was written to overcome the repetitiveness of fiddling with grep and tail -f.\r\nLogfilter is a wrapper for 'tail -f' and grep.\r\n\r\n### Filtering incoming data\r\n\r\nAt any time you can press CTRL-C and modify your incoming regex:\r\n\r\n  <img alt=\"logfilter is a tail -f alternative\" src=\"https://raw.githubusercontent.com/coderofsalvation/logfilter/master/.res/filterin.png\"/>\r\n\r\n### Filtering outgoing data\r\n\r\nToo much data to stdout? At any time you can press CTRL-C and modify your outgoing regex:\r\n\r\n  <img alt=\"logfilter is a tail -f alternative\" src=\"https://raw.githubusercontent.com/coderofsalvation/logfilter/master/.res/filterout.png\"/>\r\n\r\n### Highlighting data\r\n\r\nWant to have warnings/errors to standout? Press CTRL-C and modify your highlighting regex:\r\n  \r\n  <img alt=\"logfilter is a tail -f alternative\" src=\"https://raw.githubusercontent.com/coderofsalvation/logfilter/master/.res/highlight.png\"/>\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}